# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
#              1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed n,
# find the sum of the even-valued terms.

def compute_sum(max_number):
    starting_sequence = [0,1]
    fibonacci_sequence = compute_fibonacci_sequence(starting_sequence, max_number)
    return compute_sum_of_even_numbers(fibonacci_sequence)

## TODO: these below two methods should really be private
def compute_sum_of_even_numbers(sequence):
    sum =0
    for num in sequence:
        if(num%2 == 0):
            sum = sum + num
    return sum

def compute_fibonacci_sequence(prevNumbers, max_number):
    length = len(prevNumbers)
    next_number = prevNumbers[length-2] + prevNumbers[length-1]

    if(next_number >= max_number):
        return prevNumbers
    
    prevNumbers.append(next_number)
    return compute_fibonacci_sequence(prevNumbers, max_number)
